"""delete_webhook.py
–°–∫—Ä–∏–ø—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è webhook –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ –¥–ª—è polling.
"""
import asyncio
import os
from aiogram import Bot

async def delete_webhook():
    """–£–¥–∞–ª–∏—Ç—å webhook –∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –±–æ—Ç–∞ –¥–ª—è polling."""
    # –ß–∏—Ç–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ .env
    from dotenv import load_dotenv
    load_dotenv()
    
    token = os.getenv("TELEGRAM_BOT_TOKEN")
    if not token:
        print("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        return
    
    bot = Bot(token)
    
    try:
        # –£–¥–∞–ª—è–µ–º webhook
        print("üîÑ –£–¥–∞–ª—è—é webhook...")
        await bot.delete_webhook()
        print("‚úÖ Webhook —É–¥–∞–ª—ë–Ω —É—Å–ø–µ—à–Ω–æ!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
        webhook_info = await bot.get_webhook_info()
        print(f"üìä –°—Ç–∞—Ç—É—Å webhook: {webhook_info.url or '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
        bot_info = await bot.get_me()
        print(f"ü§ñ –ë–æ—Ç: @{bot_info.username} ({bot_info.first_name})")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        await bot.session.close()

if __name__ == "__main__":
    asyncio.run(delete_webhook())
