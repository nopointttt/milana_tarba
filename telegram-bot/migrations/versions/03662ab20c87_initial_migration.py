"""Initial migration

Revision ID: 03662ab20c87
Revises: 
Create Date: 2025-09-06 16:49:46.609794

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '03662ab20c87'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('telegram_user_id', sa.Integer(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_telegram_user_id'), 'user', ['telegram_user_id'], unique=True)
    op.create_table('dialog',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dialog_user_id'), 'dialog', ['user_id'], unique=False)
    op.create_table('nametransliteration',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('original_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('transliterated_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('confirmed', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_nametransliteration_user_id'), 'nametransliteration', ['user_id'], unique=False)
    op.create_table('reportrequest',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('birth_date', sa.Date(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'DONE', 'ERROR', name='reportstatus'), nullable=False),
    sa.Column('result_text', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('error', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reportrequest_user_id'), 'reportrequest', ['user_id'], unique=False)
    op.create_table('message',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dialog_id', sa.Integer(), nullable=False),
    sa.Column('role', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['dialog_id'], ['dialog.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_message_dialog_id'), 'message', ['dialog_id'], unique=False)
    op.drop_index(op.f('idx_analytics_events_user_id'), table_name='analytics_events')
    op.drop_table('analytics_events')
    op.drop_index(op.f('idx_user_states_user_id'), table_name='user_states')
    op.drop_table('user_states')
    op.drop_index(op.f('idx_interactions_user_id'), table_name='interactions')
    op.drop_table('interactions')
    op.drop_index(op.f('idx_calculations_user_id'), table_name='calculations')
    op.drop_table('calculations')
    op.drop_index(op.f('idx_users_telegram_id'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('telegram_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('first_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('getcourse_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('telegram_id', name='users_telegram_id_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('idx_users_telegram_id'), 'users', ['telegram_id'], unique=False)
    op.create_table('calculations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('birth_date', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('full_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('consciousness_number', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('action_number', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('name_number', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('matrix_data', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('interpretation', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('calculations_user_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('calculations_pkey'))
    )
    op.create_index(op.f('idx_calculations_user_id'), 'calculations', ['user_id'], unique=False)
    op.create_table('interactions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('message_type', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('message_text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('response_text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('response_time', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('interactions_user_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('interactions_pkey'))
    )
    op.create_index(op.f('idx_interactions_user_id'), 'interactions', ['user_id'], unique=False)
    op.create_table('user_states',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('state', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('user_states_user_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('user_states_pkey'))
    )
    op.create_index(op.f('idx_user_states_user_id'), 'user_states', ['user_id'], unique=False)
    op.create_table('analytics_events',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('event_type', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('event_data', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('analytics_events_user_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('analytics_events_pkey'))
    )
    op.create_index(op.f('idx_analytics_events_user_id'), 'analytics_events', ['user_id'], unique=False)
    op.drop_index(op.f('ix_message_dialog_id'), table_name='message')
    op.drop_table('message')
    op.drop_index(op.f('ix_reportrequest_user_id'), table_name='reportrequest')
    op.drop_table('reportrequest')
    op.drop_index(op.f('ix_nametransliteration_user_id'), table_name='nametransliteration')
    op.drop_table('nametransliteration')
    op.drop_index(op.f('ix_dialog_user_id'), table_name='dialog')
    op.drop_table('dialog')
    op.drop_index(op.f('ix_user_telegram_user_id'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###
