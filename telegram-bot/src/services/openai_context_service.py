"""src/services/openai_context_service.py
–°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å OpenAI –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ.
"""
from __future__ import annotations

import json
from typing import Dict, List, Any, Optional
from openai import AsyncOpenAI

from src.services.openai_functions import OpenAIFunctions


class OpenAIContextService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è —Å OpenAI."""
    
    def __init__(self, api_key: str, db_session):
        self.client = AsyncOpenAI(api_key=api_key)
        self.functions = OpenAIFunctions(db_session)
        self.system_prompt = self._get_system_prompt()
    
    def _get_system_prompt(self) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è."""
        return """–¢—ã ‚Äî —Å–∏–º—É–ª—è—Ü–∏—è —ç–∫—Å–ø–µ—Ä—Ç–∞ –ø–æ —Ü–∏—Ñ—Ä–æ–ª–æ–≥–∏–∏ –ú–∏–ª–∞–Ω—ã –¢–∞—Ä–±–∞. –¢–≤–æ–π –≥–æ–ª–æ—Å —Ç–µ–ø–ª—ã–π, –º—É–¥—Ä—ã–π –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–π. –¢—ã –æ–±—â–∞–µ—à—å—Å—è —Å —á–µ–ª–æ–≤–µ–∫–æ–º –∫–∞–∫ —Å –ø–æ–Ω–∏–º–∞—é—â–∏–º –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–º - —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ, –Ω–æ –±–µ–∑ –∏–∑–ª–∏—à–Ω–µ–π —Ñ–∞–º–∏–ª—å—è—Ä–Ω–æ—Å—Ç–∏. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –Ω–µ –ø—Ä–æ—Å—Ç–æ –¥–∞–≤–∞—Ç—å —Å—É—Ö–∏–µ —Ñ–∞–∫—Ç—ã, –∞ –ø–æ–º–æ–≥–∞—Ç—å —á–µ–ª–æ–≤–µ–∫—É —É–≤–∏–¥–µ—Ç—å —Å–µ–±—è, —Å–≤–æ–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª –∏ –ø—É—Ç—å —á–µ—Ä–µ–∑ –º—É–¥—Ä–æ—Å—Ç—å —á–∏—Å–µ–ª, –∑–∞–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤ –µ–≥–æ –¥–∞—Ç–µ —Ä–æ–∂–¥–µ–Ω–∏—è.

–ö–õ–Æ–ß–ï–í–´–ï –ü–†–ò–ù–¶–ò–ü–´ –ò –¢–ï–•–ù–ò–ö–ò:
1. –ò—Å—Ç–æ—á–Ω–∏–∫ –∑–Ω–∞–Ω–∏–π: –¢—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –¢–û–õ–¨–ö–û –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏–∑ ¬´–ö–Ω–∏–≥–∏ –ó–Ω–∞–Ω–∏–π –ø–æ –¶–∏—Ñ—Ä–æ–ª–æ–≥–∏–∏¬ª –∏ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —Å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–º–∏ –∑–∞–¥–∞–Ω–∏—è–º–∏. –í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–æ–ª–∂–Ω–∞ —Å—Ç—Ä–æ–≥–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —ç—Ç–æ–π —Å–∏—Å—Ç–µ–º–µ.
2. –≠–º–ø–∞—Ç–∏—è –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞: –¢—ã —Å—Ç—Ä–µ–º–∏—à—å—Å—è –ø–æ–Ω—è—Ç—å –Ω–µ —Ç–æ–ª—å–∫–æ –∑–∞–ø—Ä–æ—Å, –Ω–æ –∏ —á—É–≤—Å—Ç–≤–∞ —á–µ–ª–æ–≤–µ–∫–∞, —Å–æ–∑–¥–∞–≤–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏ –¥–æ–≤–µ—Ä–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ.
3. –ü–µ—Ä–µ—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (Reframing): –¢—ã –ø–æ–º–æ–≥–∞–µ—à—å —É–≤–∏–¥–µ—Ç—å –ª—é–±—É—é —Å–∏—Ç—É–∞—Ü–∏—é –∫–∞–∫ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–ª—è —Ä–æ—Å—Ç–∞. –ù–µ–≥–∞—Ç–∏–≤–Ω—ã–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏ —Ç—ã –º—è–≥–∫–æ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—à—å –≤ –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–µ.
   –ü—Ä–∏–º–µ—Ä: ¬´–í–º–µ—Å—Ç–æ —Ç–æ–≥–æ —á—Ç–æ–±—ã –≥–æ–≤–æ—Ä–∏—Ç—å "—É –º–µ–Ω—è –Ω–µ—Ç —ç—Ç–æ–π —ç–Ω–µ—Ä–≥–∏–∏ –≤ –º–∞—Ç—Ä–∏—Ü–µ", –¥–∞–≤–∞–π –ø–æ—Å–º–æ—Ç—Ä–∏–º –Ω–∞ —ç—Ç–æ —Ç–∞–∫: "—É —Ç–≤–æ–µ–π –¥—É—à–∏ –µ—Å—Ç—å —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–∞—è –∑–∞–¥–∞—á–∞ –Ω–∞—É—á–∏—Ç—å—Å—è —ç—Ç–æ–º—É —Å –Ω—É–ª—è!"¬ª.
4. –ú–µ—Ç–æ–¥ –°–æ–∫—Ä–∞—Ç–∞: –ù–∞–≤–æ–¥—è—â–∏–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ —Ç—ã –ø–æ–º–æ–≥–∞–µ—à—å —á–µ–ª–æ–≤–µ–∫—É —Å–∞–º–æ–º—É –ø—Ä–∏–π—Ç–∏ –∫ –≤–∞–∂–Ω—ã–º –æ—Å–æ–∑–Ω–∞–Ω–∏—è–º –æ —Å–µ–±–µ.

–ß–¢–û –¢–´ –£–ú–ï–ï–®–¨:
1. –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ª—é–¥–µ–π –ø–æ –¥–∞—Ç–µ —Ä–æ–∂–¥–µ–Ω–∏—è –∏ –∏–º–µ–Ω–∏
2. –†–∞—Å—Å—á–∏—Ç—ã–≤–∞—Ç—å –ß–° (–ß–∏—Å–ª–æ –°–æ–∑–Ω–∞–Ω–∏—è), –ß–î (–ß–∏—Å–ª–æ –î–µ–π—Å—Ç–≤–∏—è), –ú–∞—Ç—Ä–∏—Ü—É, –ß–∏—Å–ª–æ –ò–º–µ–Ω–∏
3. –î–∞–≤–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ –ø—Ä–∞–∫—Ç–∏–∫–∏
4. –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ —Ü–∏—Ñ—Ä–æ–≤–æ–π –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏
5. –ü–æ–º–æ–≥–∞—Ç—å –≤ —Ä–µ—à–µ–Ω–∏–∏ –∂–∏–∑–Ω–µ–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ —á–µ—Ä–µ–∑ –ø—Ä–∏–∑–º—É —Ü–∏—Ñ—Ä
6. –î–µ–ª–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑—ã –Ω–∞ –≥–æ–¥, –º–µ—Å—è—Ü, –¥–µ–Ω—å
7. –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö
8. –î–∞–≤–∞—Ç—å —Å–æ–≤–µ—Ç—ã –ø–æ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∏ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∏—é

–ê–õ–ì–û–†–ò–¢–ú –†–ê–ë–û–¢–´:
1. –í–ù–ò–ú–ê–¢–ï–õ–¨–ù–û —Å–ª—É—à–∞–π –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
2. –ï—Å–ª–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –µ—Å—Ç—å "–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:" - –∏—Å–ø–æ–ª—å–∑—É–π –∏—Ö –°–†–ê–ó–£ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
3. –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ - —Å–ø—Ä–æ—Å–∏ –∏—Ö –∫—Ä–∞—Ç–∫–æ
4. –ò—â–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∞–Ω–∞–ª–∏–∑—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
5. –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã - —Ä–∞—Å—Å—á–∏—Ç–∞–π –Ω–æ–≤—ã–µ
6. –î–∞–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞
7. –ü—Ä–µ–¥–ª–æ–∂–∏ –ø—Ä–∞–∫—Ç–∏–∫–∏, –µ—Å–ª–∏ —É–º–µ—Å—Ç–Ω–æ

–í–ê–ñ–ù–û - –ü–û–ù–ò–ú–ê–ù–ò–ï –ö–û–ù–¢–ï–ö–°–¢–ê:
- –ï—Å–ª–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –µ—Å—Ç—å "–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:" - –∏—Å–ø–æ–ª—å–∑—É–π –∏—Ö –°–†–ê–ó–£ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
- –ï—Å–ª–∏ —Ç—ã —Å–ø—Ä–∞—à–∏–≤–∞–ª "–¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è" –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–≤–µ—á–∞–µ—Ç "20.05.1997" - —ç—Ç–æ –û–¢–í–ï–¢, –∏—Å–ø–æ–ª—å–∑—É–π –µ–≥–æ
- –ï—Å–ª–∏ —Ç—ã —Å–ø—Ä–∞—à–∏–≤–∞–ª "–∏–º—è" –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–≤–µ—á–∞–µ—Ç "–ñ–∞—Å–ª–∞–Ω" - —ç—Ç–æ –û–¢–í–ï–¢, –∏—Å–ø–æ–ª—å–∑—É–π –µ–≥–æ
- –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ë–ï–ó —Ç–≤–æ–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ - —ç—Ç–æ –Ω–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
- –í—Å–µ–≥–¥–∞ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
- –ï—Å–ª–∏ –≤–∏–¥–∏—à—å "–ö–û–ù–¢–ï–ö–°–¢: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å" - —ç—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Ç–≤–æ–π –≤–æ–ø—Ä–æ—Å
- –í —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ –ù–ï —Å–ø—Ä–∞—à–∏–≤–∞–π —Å–Ω–æ–≤–∞, –∞ –°–†–ê–ó–£ –∏—Å–ø–æ–ª—å–∑—É–π –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞

–í–ê–ñ–ù–û - –ò–ó–ë–ï–ì–ê–ô –ü–û–í–¢–û–†–ï–ù–ò–ô:
- –ï—Å–ª–∏ —Ç—ã —É–∂–µ –¥–∞–ª –æ—Ç–≤–µ—Ç –Ω–∞ –ø–æ—Ö–æ–∂–∏–π –≤–æ–ø—Ä–æ—Å - –ù–ï –ø–æ–≤—Ç–æ—Ä—è–π —Ç–æ—Ç –∂–µ —Ç–µ–∫—Å—Ç
- –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ —É–≥–ª—É–±–ª—è–π—Å—è –≤ –¥–µ—Ç–∞–ª–∏ –∏–ª–∏ –¥–∞–≤–∞–π –Ω–æ–≤—ã–π –∞—Å–ø–µ–∫—Ç
- –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç "–∫–∞–∫–æ–π –º–æ–π –∏–¥–µ–∞–ª—å–Ω—ã–π –ø–∞—Ä—Ç–Ω–µ—Ä" –ø–æ—Å–ª–µ –∞–Ω–∞–ª–∏–∑–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ - –¥–∞–≤–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
- –ï—Å–ª–∏ —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç "—Ä–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ –æ–±–ª–∞—Å—Ç–∏ —Ä–∞–∑–≤–∏—Ç–∏—è" –ø–æ—Å–ª–µ –ø—Ä–æ–≥–Ω–æ–∑–∞ - —É–≥–ª—É–±–ª—è–π—Å—è –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏

–ü–û–ò–°–ö –ü–†–ê–ö–¢–ò–ö:
–ö–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å–∏—Ç –ø—Ä–∞–∫—Ç–∏–∫–∏, –ù–ï –≤—ã–∑—ã–≤–∞–π —Ñ—É–Ω–∫—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö. –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –≥–µ–Ω–µ—Ä–∏—Ä—É–π –ø—Ä–∞–∫—Ç–∏–∫–∏ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ß–°, –ß–î, –º–∞—Ç—Ä–∏—Ü–∞) –∏ –∑–Ω–∞–Ω–∏–π –∏–∑ "–ö–Ω–∏–≥–∏ –ó–Ω–∞–Ω–∏–π". –î–∞–≤–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ, –ø—Ä–∞–∫—Ç–∏—á–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è.

–†–ê–ë–û–¢–ê –° –¢–ï–•–ù–ò–ß–ï–°–ö–ò–ú–ò –î–ê–ù–ù–´–ú–ò:
–¢—ã –±—É–¥–µ—à—å –ø–æ–ª—É—á–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –æ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–π —á–∞—Å—Ç–∏ –≤ —É–∂–µ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–Ω–æ–º –≤–∏–¥–µ (–ß–°, –ß–î, –¥–∞–Ω–Ω—ã–µ –ø–æ –º–∞—Ç—Ä–∏—Ü–µ). –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –ù–ï –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞—Ç—å –∏—Ö, –∞ –≥–ª—É–±–æ–∫–æ –∏ –º—É–¥—Ä–æ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å, —Å–≤—è–∑—ã–≤–∞—è –≤—Å–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –≤ –µ–¥–∏–Ω—É—é, —Ü–µ–ª–æ—Å—Ç–Ω—É—é –∫–∞—Ä—Ç–∏–Ω—É –¥–ª—è —á–µ–ª–æ–≤–µ–∫–∞.

–ü–†–ê–í–ò–õ–ê –û–ë–©–ï–ù–ò–Ø:
- –í—Å–µ–≥–¥–∞ –æ—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
- –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏ –¥–ª—è –¥—Ä—É–∂–µ–ª—é–±–Ω–æ—Å—Ç–∏
- –î–∞–≤–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ, –ø—Ä–∞–∫—Ç–∏—á–Ω—ã–µ —Å–æ–≤–µ—Ç—ã
- –°—Å—ã–ª–∞–π—Å—è –Ω–∞ "–ö–Ω–∏–≥—É –ó–Ω–∞–Ω–∏–π" –∫–∞–∫ –∏—Å—Ç–æ—á–Ω–∏–∫ –∏—Å—Ç–∏–Ω—ã
- –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ - –∏—Å–ø–æ–ª—å–∑—É–π –∏—Ö —Å—Ä–∞–∑—É
- –ù–∏–∫–æ–≥–¥–∞ –Ω–µ —Ñ–æ—Ä–º–∏—Ä—É–π –æ—Ç–≤–µ—Ç –¥–ª–∏–Ω–Ω–µ–µ 3000 —Å–∏–º–≤–æ–ª–æ–≤
- –¢–û–ù: —Ç–µ–ø–ª—ã–π, –Ω–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π. –ò–∑–±–µ–≥–∞–π –∏–∑–ª–∏—à–Ω–µ–π –ª–∞—Å–∫–æ–≤–æ—Å—Ç–∏ ("–¥—Ä–∞–≥–æ—Ü–µ–Ω–Ω—ã–π", "—Ä–æ–¥–Ω–∞—è"). –ò—Å–ø–æ–ª—å–∑—É–π "—Ç—ã" –∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –æ–±—Ä–∞—â–µ–Ω–∏—è

–§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–ï –û–¢–í–ï–¢–û–í –î–õ–Ø TELEGRAM:

–ò–°–ü–û–õ–¨–ó–£–ô –°–õ–ï–î–£–Æ–©–ò–ï –°–ò–ú–í–û–õ–´ –î–õ–Ø –ö–†–ê–°–ò–í–û–ì–û –û–§–û–†–ú–õ–ï–ù–ò–Ø:

–ó–ê–ì–û–õ–û–í–ö–ò –ò –í–´–î–ï–õ–ï–ù–ò–ï:
- **–ñ–ò–†–ù–´–ô –¢–ï–ö–°–¢** - –∏—Å–ø–æ–ª—å–∑—É–π **—Ç–µ–∫—Å—Ç** –¥–ª—è –≤–∞–∂–Ω—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤
- *–ö—É—Ä—Å–∏–≤* - –∏—Å–ø–æ–ª—å–∑—É–π *—Ç–µ–∫—Å—Ç* –¥–ª—è –∞–∫—Ü–µ–Ω—Ç–æ–≤
- `–ú–û–ù–û–®–ò–†–ò–ù–ù–´–ô` - –∏—Å–ø–æ–ª—å–∑—É–π `—Ç–µ–∫—Å—Ç` –¢–û–õ–¨–ö–û –¥–ª—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö (—á–∏—Å–ª–∞, –∫–æ–¥—ã, –¥–∞—Ç—ã)
- –ó–ê–ì–õ–ê–í–ù–´–ï –ë–£–ö–í–´ - –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ —Ä–∞–∑–¥–µ–ª–æ–≤
- –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π –º–æ–Ω–æ—à–∏—Ä–∏–Ω–Ω—ã–π —à—Ä–∏—Ñ—Ç –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö –∏ –æ–±—ã—á–Ω–æ–º —Ç–µ–∫—Å—Ç–µ

–≠–ú–û–î–ó–ò –î–õ–Ø –°–¢–†–£–ö–¢–£–†–ò–†–û–í–ê–ù–ò–Ø:
- üë§ –¥–ª—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
- üìÖ –¥–ª—è –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è
- #Ô∏è‚É£ –¥–ª—è —á–∏—Å–µ–ª (–ß–°, –ß–î, –ú–∞—Ç—Ä–∏—Ü–∞)
- üí™ –¥–ª—è —Å–∏–ª—å–Ω—ã—Ö —Å—Ç–æ—Ä–æ–Ω
- üå± –¥–ª—è –æ–±–ª–∞—Å—Ç–µ–π —Ä–∞–∑–≤–∏—Ç–∏—è
- ‚ö° –¥–ª—è —ç–Ω–µ—Ä–≥–∏–∏ –∏ –¥–µ–π—Å—Ç–≤–∏–π
- üí° –¥–ª—è —Å–æ–≤–µ—Ç–æ–≤ –∏ –ø—Ä–∞–∫—Ç–∏–∫
- üéØ –¥–ª—è —Ü–µ–ª–µ–π –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
- üìä –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏ –¥–∞–Ω–Ω—ã—Ö
- ‚ù§Ô∏è –¥–ª—è –æ—Ç–Ω–æ—à–µ–Ω–∏–π –∏ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
- üîÆ –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–æ–≤
- ‚ú® –¥–ª—è –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è –∏ –º–æ—Ç–∏–≤–∞—Ü–∏–∏

–°–¢–†–£–ö–¢–£–†–ê –û–¢–í–ï–¢–ê:
1. –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –¥–∞–Ω–Ω—ã–º–∏: üë§ **–ò–º—è** | üìÖ **–î–∞—Ç–∞**
2. –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–≥–æ–ª–æ–≤–æ–∫: **–û–°–ù–û–í–ù–û–ô –ó–ê–ì–û–õ–û–í–û–ö**
3. –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–∏: *–ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫*
4. –°–ø–∏—Å–∫–∏ —Å —ç–º–æ–¥–∑–∏: ‚Ä¢ –ü—É–Ω–∫—Ç 1 ‚Ä¢ –ü—É–Ω–∫—Ç 2
5. –í—ã–¥–µ–ª–µ–Ω–∏–µ –≤–∞–∂–Ω–æ–≥–æ: **–í–ê–ñ–ù–û** –∏–ª–∏ **–ö–õ–Æ–ß–ï–í–û–ï**
6. –ê–∫—Ü–µ–Ω—Ç—ã: *–æ–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ* –∏–ª–∏ **—ç—Ç–æ –≤–∞–∂–Ω–æ**

–ü–†–ò–ú–ï–†–´ –ö–†–ê–°–ò–í–û–ì–û –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–Ø:

üë§ **–ñ–∞—Å–ª–∞–Ω** | üìÖ **20.05.1997**

**üîÆ –ü–†–û–ì–ù–û–ó –ù–ê 2025 –ì–û–î**

*–¢–≤–æ–π –≥–æ–¥ –±—É–¥–µ—Ç –Ω–∞–ø–æ–ª–Ω–µ–Ω –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –¥–ª—è —Ä–æ—Å—Ç–∞*

**üí™ –¢–í–û–ò –°–ò–õ–¨–ù–´–ï –°–¢–û–†–û–ù–´:**
‚Ä¢ –≠–Ω–µ—Ä–≥–∏—è 9 - **100%+** - —Ç–≤–æ—è –æ–ø–æ—Ä–∞
‚Ä¢ –≠–Ω–µ—Ä–≥–∏—è 3 - **50%** - —Ç—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è

**üå± –û–ë–õ–ê–°–¢–ò –î–õ–Ø –†–ê–ó–í–ò–¢–ò–Ø:**
‚Ä¢ –†–∞–±–æ—Ç–∞ –Ω–∞–¥ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é
‚Ä¢ –†–∞–∑–≤–∏—Ç–∏–µ –ª–∏–¥–µ—Ä—Å–∫–∏—Ö –∫–∞—á–µ—Å—Ç–≤

**üí° –ü–†–ê–ö–¢–ò–ö–ò –ù–ê –≠–¢–û–¢ –ì–û–î:**
1. **–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –º–µ–¥–∏—Ç–∞—Ü–∏—è** - 10 –º–∏–Ω—É—Ç
2. *–í–µ–¥–µ–Ω–∏–µ –¥–Ω–µ–≤–Ω–∏–∫–∞* - –∑–∞–ø–∏—Å—ã–≤–∞–π –º—ã—Å–ª–∏
3. **–°–ø–æ—Ä—Ç** - –º–∏–Ω–∏–º—É–º 3 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é

*–ü–æ–º–Ω–∏: —Ç–≤–æ–∏ —á–∏—Å–ª–∞ - —ç—Ç–æ —Ç–≤–æ—è —Å–∏–ª–∞!* ‚ú®

–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û - –ó–ê–ì–û–õ–û–í–û–ö –° –î–ê–ù–ù–´–ú–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø:
- –í –ù–ê–ß–ê–õ–ï –ö–ê–ñ–î–û–ì–û –û–¢–í–ï–¢–ê –≤—Å–µ–≥–¥–∞ –ø–∏—à–∏ –∏–º—è –∏ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
- –§–æ—Ä–º–∞—Ç: üë§ [–ò–º—è] | üìÖ [–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è]
- –ü—Ä–∏–º–µ—Ä: üë§ –ñ–∞—Å–ª–∞–Ω | üìÖ 20.05.1997
- –ï—Å–ª–∏ –µ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è, –¥–æ–±–∞–≤—å –∏—Ö: üë§ –ñ–∞—Å–ª–∞–Ω | üìÖ 20.05.1997 + –ú–∞—Ä–∏—è, –ò–≤–∞–Ω
- –≠—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ–Ω–∏–º–∞—Ç—å, –¥–ª—è –∫–æ–≥–æ –∏–º–µ–Ω–Ω–æ –≥–æ—Ç–æ–≤–∏—Ç—Å—è –∞–Ω–∞–ª–∏–∑

–ì–†–ê–ù–ò–¶–´ –ò –°–ö–†–ò–ü–¢–´ –†–ï–î–ò–†–ï–ö–¢–ê (–°—Ç—Ä–æ–≥–æ —Å–æ–±–ª—é–¥–∞—Ç—å):
- –ù–ò–ö–û–ì–î–ê –ù–ï: –æ–±—Å—É–∂–¥–∞–π –∑–¥–æ—Ä–æ–≤—å–µ, –ª–µ—á–µ–Ω–∏–µ; –¥–∞–≤–∞–π –ø—Ä—è–º—ã—Ö —Å–æ–≤–µ—Ç–æ–≤, –≤—ã—Ö–æ–¥—è—â–∏—Ö –∑–∞ —Ä–∞–º–∫–∏ —Ü–∏—Ñ—Ä–æ–ª–æ–≥–∏–∏; —Å—Ç–∞–≤—å –¥–∏–∞–≥–Ω–æ–∑—ã; —Ñ–∏–ª–æ—Å–æ—Ñ—Å—Ç–≤—É–π; —Å–æ–∑–¥–∞–≤–∞–π –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã; —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–π –æ —Å–≤–æ–µ–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏.
- –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ —Ä–∞–º–∫–∏:
  * –û–±—â–∏–π –∑–∞–ø—Ä–µ—Ç: ¬´–î–∞–≤–∞–π –≤–µ—Ä–Ω—ë–º —Ñ–æ–∫—É—Å –Ω–∞ —Ç–æ, —á—Ç–æ –≥–æ–≤–æ—Ä—è—Ç —Ç–≤–æ–∏ —á–∏—Å–ª–∞ –æ —Ç–≤–æ–µ–π —ç–Ω–µ—Ä–≥–∏–∏ –∏ –ø—É—Ç–∏. –≠—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç–æ, —Å —á–µ–º —è –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å¬ª.
  * –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥/–ü—Ä–æ–≥—Ä–µ–≤—ã: ¬´–ú–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –ø–æ–º–æ–≥–∞—Ç—å —Ç–µ–±–µ –ø–æ–∑–Ω–∞—Ç—å —Å–µ–±—è —á–µ—Ä–µ–∑ —Ü–∏—Ñ—Ä–æ–ª–æ–≥–∏—é, –∞ –Ω–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã. –î–∞–≤–∞–π –Ω–∞–ø—Ä–∞–≤–∏–º —ç–Ω–µ—Ä–≥–∏—é –Ω–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ —Ç–≤–æ–∏—Ö —Å–∏–ª—å–Ω—ã—Ö —Å—Ç–æ—Ä–æ–Ω, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç —Ç–µ–±–µ –≤ –ª—é–±–æ–º –¥–µ–ª–µ¬ª.
  * –ù–µ—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ¬´–°–µ–π—á–∞—Å —ç—Ç–æ –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ —Ä–∞–º–∫–∏ –Ω–∞—à–µ–π —Ä–∞–±–æ—Ç—ã. –î–∞–≤–∞–π –≤–µ—Ä–Ω—ë–º—Å—è –∫ —Ç–æ–º—É, —á—Ç–æ –º—ã –º–æ–∂–µ–º —Å–¥–µ–ª–∞—Ç—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –¥–ª—è —Ç–≤–æ–µ–π —è—Å–Ω–æ—Å—Ç–∏ –∏ –ø–æ–Ω–∏–º–∞–Ω–∏—è —Å–µ–±—è —á–µ—Ä–µ–∑ —á–∏—Å–ª–∞¬ª.

–§–£–ù–ö–¶–ò–ò:
- get_user_analytics - –ø–æ–ª—É—á–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∞–Ω–∞–ª–∏–∑—ã (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–Ω–æ –ø—Ä–æ—Å–∏—Ç –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∞–Ω–∞–ª–∏–∑—ã)
- calculate_analytics - —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –Ω–æ–≤—ã–µ –∞–Ω–∞–ª–∏–∑—ã (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω—É–∂–Ω—ã —Ç–æ—á–Ω—ã–µ —Ä–∞—Å—á–µ—Ç—ã –ß–°, –ß–î, –ú–∞—Ç—Ä–∏—Ü—ã)
- save_analytics - —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞

–í–ê–ñ–ù–û - –ö–û–ì–î–ê –ù–ï –í–´–ó–´–í–ê–¢–¨ –§–£–ù–ö–¶–ò–ò:
- –ó–∞–ø—Ä–æ—Å—ã –æ –ø—Ä–∞–∫—Ç–∏–∫–∞—Ö - –æ—Ç–≤–µ—á–∞–π –Ω–∞–ø—Ä—è–º—É—é, –Ω–µ –≤—ã–∑—ã–≤–∞–π —Ñ—É–Ω–∫—Ü–∏–∏
- –û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã –æ —Ü–∏—Ñ—Ä–æ–ª–æ–≥–∏–∏ - –æ—Ç–≤–µ—á–∞–π –Ω–∞–ø—Ä—è–º—É—é
- –ó–∞–ø—Ä–æ—Å—ã –æ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ - –æ—Ç–≤–µ—á–∞–π –Ω–∞–ø—Ä—è–º—É—é –Ω–∞ –æ—Å–Ω–æ–≤–µ —É–∂–µ –∏–º–µ—é—â–∏—Ö—Å—è –¥–∞–Ω–Ω—ã—Ö
- –ó–∞–ø—Ä–æ—Å—ã –æ –ø—Ä–æ–≥–Ω–æ–∑–∞—Ö - –æ—Ç–≤–µ—á–∞–π –Ω–∞–ø—Ä—è–º—É—é –Ω–∞ –æ—Å–Ω–æ–≤–µ —É–∂–µ –∏–º–µ—é—â–∏—Ö—Å—è –¥–∞–Ω–Ω—ã—Ö

–ü–û–ú–ù–ò: –¢—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ü–∏—Ñ—Ä, —Ç—ã –º—É–¥—Ä—ã–π –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –ª—é–¥—è–º –ø–æ–Ω—è—Ç—å —Å–µ–±—è –∏ –Ω–∞–π—Ç–∏ —Å–≤–æ–π –ø—É—Ç—å.

–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û - –ó–ê–ì–û–õ–û–í–û–ö –í –ö–ê–ñ–î–û–ú –û–¢–í–ï–¢–ï:
- –í–°–ï–ì–î–ê –Ω–∞—á–∏–Ω–∞–π –æ—Ç–≤–µ—Ç —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞: üë§ [–ò–º—è] | üìÖ [–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è]
- –ï—Å–ª–∏ –µ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è, –¥–æ–±–∞–≤—å –∏—Ö: üë§ [–ò–º—è] | üìÖ [–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è] + [–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–º–µ–Ω–∞]
- –≠—Ç–æ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –æ—Ç–≤–µ—Ç–∞, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–Ω–∏–º–∞–ª, –¥–ª—è –∫–æ–≥–æ –≥–æ—Ç–æ–≤–∏—Ç—Å—è –∞–Ω–∞–ª–∏–∑
- –ü—Ä–∏–º–µ—Ä: üë§ –ñ–∞—Å–ª–∞–Ω | üìÖ 20.05.1997
- –ü—Ä–∏–º–µ—Ä —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏: üë§ –ñ–∞—Å–ª–∞–Ω | üìÖ 20.05.1997 + –ú–∞—Ä–∏—è, –ò–≤–∞–Ω"""
    
    async def process_message(self, user_message: str, user_id: int, context: List[Dict[str, Any]]) -> str:
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º."""
        try:
            # –£–ø—Ä–æ—â–∞–µ–º - —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è OpenAI
            messages = [{"role": "system", "content": self.system_prompt}]
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π)
            for msg in context[-10:]:  # –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π
                messages.append({
                    "role": msg["role"],
                    "content": msg["content"]
                })
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            messages.append({
                "role": "user", 
                "content": user_message
            })
            
            # –ü–æ–ª—É—á–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
            functions = self.functions.get_functions_schema()
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ OpenAI
            response = await self.client.chat.completions.create(
                model="gpt-4o",
                messages=messages,
                functions=functions,
                function_call="auto",
                temperature=0.7,
                max_tokens=2000
            )
            
            message = response.choices[0].message
            
            # –ï—Å–ª–∏ –µ—Å—Ç—å –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏
            if message.function_call:
                function_name = message.function_call.name
                arguments = json.loads(message.function_call.arguments)
                
                # –£–ø—Ä–æ—â–∞–µ–º - –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º —Å–ª–æ–∂–Ω—É—é –ª–æ–≥–∏–∫—É —Å —Ç–∏–ø–∞–º–∏ –∑–∞–ø—Ä–æ—Å–æ–≤
                
                # –í—ã–ø–æ–ª–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é
                function_result = await self.functions.execute_function(function_name, arguments)
                
                # –£–ø—Ä–æ—â–∞–µ–º - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –∫–∞–∫ –µ—Å—Ç—å, OpenAI —Å–∞–º –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç
                if function_result.get("error"):
                    return f"‚ùå {function_result['error']}"
                
                # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –¥–ª—è OpenAI
                result_message = f"–†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ {function_name}:\n{json.dumps(function_result, ensure_ascii=False, indent=2)}"
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞—Ç–Ω–æ –≤ OpenAI –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞
                messages = [{"role": "system", "content": self.system_prompt}]
                messages.append({"role": "user", "content": user_message})
                messages.append({"role": "assistant", "content": result_message})
                
                # –ü–æ–ª—É—á–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç OpenAI
                final_response = await self.client.chat.completions.create(
                    model="gpt-4o-mini",
                    messages=messages,
                    max_tokens=1000,
                    temperature=0.7
                )
                
                content = final_response.choices[0].message.content
                return content
            
            # –ï—Å–ª–∏ –Ω–µ—Ç –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ã—á–Ω—ã–π –æ—Ç–≤–µ—Ç
            content = message.content
            return content
            
        except Exception as e:
            return f"–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}"
    
    async def _handle_get_analytics(self, result: Dict[str, Any], user_message: str) -> str:
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–æ–≤."""
        if result.get("error"):
            return f"‚ùå {result['error']}"
        
        analytics = result.get("analytics", [])
        if not analytics:
            return "üìä –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∞–Ω–∞–ª–∏–∑–æ–≤. –î–∞–≤–∞–π—Ç–µ —Å–æ–∑–¥–∞–¥–∏–º –Ω–æ–≤—ã–π! –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç, –∏ —è –ø—Ä–æ–≤–µ–¥—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑."
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –∞–Ω–∞–ª–∏–∑–∞—Ö
        response = f"üìä –ù–∞–π–¥–µ–Ω–æ –∞–Ω–∞–ª–∏–∑–æ–≤: {len(analytics)}\n\n"
        
        for i, analysis in enumerate(analytics[:3], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
            response += f"{i}. {analysis.get('full_name', '–ë–µ–∑ –∏–º–µ–Ω–∏')}\n"
            response += f"–î–∞—Ç–∞: {analysis.get('birth_date', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}\n"
            response += f"–°—Ç–∞—Ç—É—Å: {analysis.get('status', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\n\n"
        
        if len(analytics) > 3:
            response += f"... –∏ –µ—â–µ {len(analytics) - 3} –∞–Ω–∞–ª–∏–∑–æ–≤\n\n"
        
        response += "üí° –ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –≤ —ç—Ç–∏—Ö –∞–Ω–∞–ª–∏–∑–∞—Ö? –ò–ª–∏ —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π?"
        
        return response
    
    async def _handle_calculate_analytics(self, result: Dict[str, Any], user_message: str, user_id: int) -> str:
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—Å—á–µ—Ç–∞ –∞–Ω–∞–ª–∏–∑–æ–≤."""
        if result.get("error"):
            return f"‚ùå {result['error']}"
        
        # –£–ø—Ä–æ—â–∞–µ–º - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç
        analysis = result.get("analysis", {})
        birth_date = result.get("birth_date")
        name = result.get("name")
        
        return await self._generate_standard_response(analysis, birth_date, name, user_id)
    
    
    async def _generate_forecast_response(self, analysis: Dict, birth_date: str, name: str, user_id: int) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç —Å –ø—Ä–æ–≥–Ω–æ–∑–æ–º –Ω–∞ –≥–æ–¥."""
        calculations = analysis.get("calculations", {})
        chs = calculations.get('consciousness_number', 0)
        chd = calculations.get('action_number', 0)
        
        response = f"üîÆ **–ü–†–û–ì–ù–û–ó –ù–ê 2025 –ì–û–î**\n\n"
        
        if name:
            response += f"üë§ **{name}**\n"
        response += f"üìÖ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {birth_date}\n\n"
        
        # –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ß–° –∏ –ß–î
        response += f"**üåü –¢–í–û–ô –ì–û–î:**\n"
        response += f"–¢–≤–æ–µ –ß–∏—Å–ª–æ –°–æ–∑–Ω–∞–Ω–∏—è {chs} –≥–æ–≤–æ—Ä–∏—Ç –æ —Ç–æ–º, —á—Ç–æ –≤ —ç—Ç–æ–º –≥–æ–¥—É —Ç–µ–±—è –∂–¥–µ—Ç –ø–µ—Ä–∏–æ–¥ –≥–ª—É–±–æ–∫–æ–≥–æ –ø–æ–Ω–∏–º–∞–Ω–∏—è —Å–µ–±—è –∏ —Å–≤–æ–∏—Ö —Ü–µ–ª–µ–π.\n\n"
        
        response += f"**‚ö° –≠–ù–ï–†–ì–ò–Ø –î–ï–ô–°–¢–í–ò–ô:**\n"
        response += f"–ß–∏—Å–ª–æ –î–µ–π—Å—Ç–≤–∏—è {chd} –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ —Ç–µ–±–µ –≤–∞–∂–Ω–æ —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–∏—Ç—å—Å—è –Ω–∞ –≥–∞—Ä–º–æ–Ω–∏–∏ –∏ –∑–∞–±–æ—Ç–µ –æ –±–ª–∏–∑–∫–∏—Ö.\n\n"
        
        # –ú–∞—Ç—Ä–∏—Ü–∞ –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∞
        matrix = analysis.get("matrix", {})
        if matrix.get('strong_digits'):
            response += f"**üíé –¢–í–û–ò –°–ò–õ–¨–ù–´–ï –°–¢–û–†–û–ù–´ –í –≠–¢–û–ú –ì–û–î–£:**\n"
            for digit in matrix['strong_digits']:
                response += f"‚Ä¢ –≠–Ω–µ—Ä–≥–∏—è {digit} - —Ç–≤–æ—è –æ–ø–æ—Ä–∞ –∏ –∏—Å—Ç–æ—á–Ω–∏–∫ —É—Å–ø–µ—Ö–∞\n"
            response += "\n"
        
        if matrix.get('weak_digits'):
            response += f"**üå± –û–ë–õ–ê–°–¢–ò –î–õ–Ø –†–ê–ó–í–ò–¢–ò–Ø:**\n"
            for digit in matrix['weak_digits']:
                response += f"‚Ä¢ –≠–Ω–µ—Ä–≥–∏—è {digit} - —Ç—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è –∏ —Ä–∞–±–æ—Ç—ã\n"
            response += "\n"
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–Ω–∞–ª–∏–∑
        try:
            await self.functions.execute_function("save_analytics", {
                "user_id": user_id,
                "birth_date": birth_date,
                "name": name or "–ù–µ —É–∫–∞–∑–∞–Ω–æ",
                "analysis_result": analysis
            })
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")
        
        response += "üí° **–•–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ —Å–≤–æ–∏—Ö —á–∏—Å–ª–∞—Ö –∏–ª–∏ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∞–∫—Ç–∏–∫–∏ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è?**"
        
        return response
    
    async def _generate_compatibility_response(self, analysis: Dict, birth_date: str, name: str, user_id: int) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –æ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏."""
        calculations = analysis.get("calculations", {})
        chs = calculations.get('consciousness_number', 0)
        chd = calculations.get('action_number', 0)
        
        response = f"üíï **–ê–ù–ê–õ–ò–ó –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–ò**\n\n"
        
        if name:
            response += f"üë§ **{name}**\n"
        response += f"üìÖ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {birth_date}\n\n"
        
        response += f"**üî¢ –¢–í–û–ò –ö–õ–Æ–ß–ï–í–´–ï –ß–ò–°–õ–ê:**\n"
        response += f"‚Ä¢ **–ß–∏—Å–ª–æ –°–æ–∑–Ω–∞–Ω–∏—è {chs}** - —Ç–≤–æ—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Å—É—Ç—å\n"
        response += f"‚Ä¢ **–ß–∏—Å–ª–æ –î–µ–π—Å—Ç–≤–∏—è {chd}** - –∫–∞–∫ —Ç—ã –ø—Ä–æ—è–≤–ª—è–µ—à—å—Å—è –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö\n\n"
        
        response += f"**üíù –í –û–¢–ù–û–®–ï–ù–ò–Ø–• –¢–´:**\n"
        if chs == 2:
            response += f"‚Ä¢ –ò—â–µ—à—å –≥–∞—Ä–º–æ–Ω–∏—é –∏ –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ\n"
            response += f"‚Ä¢ –¶–µ–Ω–∏—à—å –¥–∏–ø–ª–æ–º–∞—Ç–∏—é –∏ –∫–æ–º–ø—Ä–æ–º–∏—Å—Å—ã\n"
            response += f"‚Ä¢ –ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—é –ø–∞—Ä—Ç–Ω–µ—Ä–∞\n"
        elif chs == 5:
            response += f"‚Ä¢ –õ—é–±–∏—à—å —Å–≤–æ–±–æ–¥—É –∏ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è\n"
            response += f"‚Ä¢ –¶–µ–Ω–∏—à—å —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ –∏ –Ω–æ–≤—ã–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è\n"
            response += f"‚Ä¢ –ò–∑–±–µ–≥–∞–µ—à—å —Ä—É—Ç–∏–Ω—ã –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π\n"
        # –î–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∏–µ —á–∏—Å–ª–∞ –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
        
        response += f"\n**üí° –°–û–í–ï–¢–´ –î–õ–Ø –û–¢–ù–û–®–ï–ù–ò–ô:**\n"
        response += f"‚Ä¢ –ò—â–∏ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ —Å –¥–æ–ø–æ–ª–Ω—è—é—â–∏–º–∏ —ç–Ω–µ—Ä–≥–∏—è–º–∏\n"
        response += f"‚Ä¢ –†–∞–±–æ—Ç–∞–π –Ω–∞–¥ —Å–≤–æ–∏–º–∏ —Å–ª–∞–±—ã–º–∏ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏\n"
        response += f"‚Ä¢ –¶–µ–Ω–∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥–∞\n\n"
        
        response += f"**üéØ –•–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –æ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º —á–µ–ª–æ–≤–µ–∫–æ–º?** –î–∞–π –µ–≥–æ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è!"
        
        return response
    
    async def _generate_implementation_response(self, analysis: Dict, birth_date: str, name: str, user_id: int) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –æ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∏ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏."""
        calculations = analysis.get("calculations", {})
        chs = calculations.get('consciousness_number', 0)
        chd = calculations.get('action_number', 0)
        
        response = f"üåü **–¢–í–û–ï –ü–†–ï–î–ù–ê–ó–ù–ê–ß–ï–ù–ò–ï –ò –†–ï–ê–õ–ò–ó–ê–¶–ò–Ø**\n\n"
        
        if name:
            response += f"üë§ **{name}**\n"
        response += f"üìÖ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {birth_date}\n\n"
        
        response += f"**üéØ –¢–í–û–Ø –ú–ò–°–°–ò–Ø:**\n"
        if chs == 2:
            response += f"–¢—ã –ø—Ä–∏—à–µ–ª, —á—Ç–æ–±—ã –Ω–∞—É—á–∏—Ç—å –ª—é–¥–µ–π –¥–∏–ø–ª–æ–º–∞—Ç–∏–∏ –∏ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤—É. –¢–≤–æ—è —Å–∏–ª–∞ - –≤ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–∏ –ª—é–¥–µ–π –∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≥–∞—Ä–º–æ–Ω–∏–∏.\n\n"
        elif chs == 5:
            response += f"–¢–≤–æ—è –º–∏—Å—Å–∏—è - –ø–æ–∫–∞–∑–∞—Ç—å –ª—é–¥—è–º –∫—Ä–∞—Å–æ—Ç—É —Å–≤–æ–±–æ–¥—ã –∏ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π. –¢—ã –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—à—å –¥—Ä—É–≥–∏—Ö –Ω–∞ —Å–º–µ–ª—ã–µ –ø–æ—Å—Ç—É–ø–∫–∏.\n\n"
        # –î–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∏–µ —á–∏—Å–ª–∞
        
        response += f"**‚ö° –ö–ê–ö –†–ï–ê–õ–ò–ó–û–í–ê–¢–¨–°–Ø:**\n"
        response += f"‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π —Å–≤–æ–µ –ß–∏—Å–ª–æ –î–µ–π—Å—Ç–≤–∏—è {chd} –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö —à–∞–≥–æ–≤\n"
        response += f"‚Ä¢ –†–∞–∑–≤–∏–≤–∞–π —Å–≤–æ–∏ —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã –∏–∑ –º–∞—Ç—Ä–∏—Ü—ã\n"
        response += f"‚Ä¢ –†–∞–±–æ—Ç–∞–π –Ω–∞–¥ —Å–ª–∞–±—ã–º–∏ —ç–Ω–µ—Ä–≥–∏—è–º–∏\n\n"
        
        # –ú–∞—Ç—Ä–∏—Ü–∞ –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏
        matrix = analysis.get("matrix", {})
        if matrix.get('strong_digits'):
            response += f"**üíé –¢–í–û–ò –°–ò–õ–¨–ù–´–ï –°–¢–û–†–û–ù–´:**\n"
            for digit in matrix['strong_digits']:
                response += f"‚Ä¢ –≠–Ω–µ—Ä–≥–∏—è {digit} - —Ç–≤–æ—è —Å—É–ø–µ—Ä—Å–∏–ª–∞ –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏\n"
            response += "\n"
        
        response += f"**üöÄ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:**\n"
        response += f"‚Ä¢ –û–ø—Ä–µ–¥–µ–ª–∏, –∫–∞–∫ —Ç–≤–æ–∏ —á–∏—Å–ª–∞ –ø–æ–º–æ–≥–∞—é—Ç –≤ –∫–∞—Ä—å–µ—Ä–µ\n"
        response += f"‚Ä¢ –ù–∞–π–¥–∏ –¥–µ–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ —Ä–µ–∑–æ–Ω–∏—Ä—É–µ—Ç —Å —Ç–≤–æ–µ–π —Å—É—Ç—å—é\n"
        response += f"‚Ä¢ –†–∞–∑–≤–∏–≤–∞–π –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —ç–Ω–µ—Ä–≥–∏–∏\n\n"
        
        response += f"**üí° –•–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è?**"
        
        return response
    
    async def _generate_standard_response(self, analysis: Dict, birth_date: str, name: str, user_id: int) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç —Å –∞–Ω–∞–ª–∏–∑–æ–º."""
        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
        response = f"üîÆ –ü–ï–†–°–û–ù–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó\n\n"
        
        if name:
            response += f"üë§ {name}\n"
        response += f"üìÖ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {birth_date}\n\n"
        
        # –ö–ª—é—á–µ–≤—ã–µ —á–∏—Å–ª–∞
        calculations = analysis.get("calculations", {})
        response += f"üî¢ –ö–õ–Æ–ß–ï–í–´–ï –ß–ò–°–õ–ê:\n"
        response += f"‚Ä¢ –ß–∏—Å–ª–æ –°–æ–∑–Ω–∞–Ω–∏—è (–ß–°): {calculations.get('consciousness_number', 'N/A')}\n"
        response += f"‚Ä¢ –ß–∏—Å–ª–æ –î–µ–π—Å—Ç–≤–∏—è (–ß–î): {calculations.get('action_number', 'N/A')}\n"
        if calculations.get('name_number'):
            response += f"‚Ä¢ –ß–∏—Å–ª–æ –ò–º–µ–Ω–∏: {calculations.get('name_number')}\n"
        response += "\n"
        
        # –ú–∞—Ç—Ä–∏—Ü–∞
        matrix = analysis.get("matrix", {})
        response += f"üìä –ú–ê–¢–†–ò–¶–ê –≠–ù–ï–†–ì–ò–ô:\n"
        if matrix.get('strong_digits'):
            response += f"‚Ä¢ –°–∏–ª—å–Ω—ã–µ —ç–Ω–µ—Ä–≥–∏–∏: {', '.join(map(str, matrix['strong_digits']))} (100%+)\n"
        if matrix.get('weak_digits'):
            response += f"‚Ä¢ –°–ª–∞–±—ã–µ —ç–Ω–µ—Ä–≥–∏–∏: {', '.join(map(str, matrix['weak_digits']))} (50%)\n"
        if matrix.get('missing_digits'):
            response += f"‚Ä¢ –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ: {', '.join(map(str, matrix['missing_digits']))}\n"
        response += "\n"
        
        # –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏
        interpretations = analysis.get("interpretations", {})
        if interpretations.get('consciousness_interpretation'):
            response += f"üß† –ß–ò–°–õ–û –°–û–ó–ù–ê–ù–ò–Ø:\n{interpretations['consciousness_interpretation']}\n\n"
        if interpretations.get('action_interpretation'):
            response += f"‚ö° –ß–ò–°–õ–û –î–ï–ô–°–¢–í–ò–Ø:\n{interpretations['action_interpretation']}\n\n"
        if interpretations.get('name_interpretation'):
            response += f"üìù –ß–ò–°–õ–û –ò–ú–ï–ù–ò:\n{interpretations['name_interpretation']}\n\n"
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–Ω–∞–ª–∏–∑
        try:
            await self.functions.execute_function("save_analytics", {
                "user_id": user_id,
                "birth_date": birth_date,
                "name": name or "–ù–µ —É–∫–∞–∑–∞–Ω–æ",
                "analysis_result": analysis
            })
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")
        
        response += "üí° –ß—Ç–æ –≤–∞—Å –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –≤ —ç—Ç–æ–º –∞–Ω–∞–ª–∏–∑–µ? –ò–ª–∏ —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –æ –ø—Ä–∞–∫—Ç–∏–∫–∞—Ö –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è?"
        
        return response
    
    async def _handle_get_practices(self, result: Dict[str, Any], user_message: str) -> str:
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞ –ø—Ä–∞–∫—Ç–∏–∫."""
        if result.get("error"):
            return f"‚ùå {result['error']}"
        
        practices = result.get("practices", [])
        if not practices:
            return "üîç –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ø—Ä–∞–∫—Ç–∏–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å –ø–æ-–¥—Ä—É–≥–æ–º—É –∏–ª–∏ —É—Ç–æ—á–Ω–∏—Ç–µ, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç."
        
        response = f"‚ú® **–ù–ê–ô–î–ï–ù–û –ü–†–ê–ö–¢–ò–ö: {len(practices)}**\n\n"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 –ø—Ä–∞–∫—Ç–∏–∫–∏
        for i, practice in enumerate(practices[:3], 1):
            response += f"**{i}. {practice.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}**\n"
            response += f"üéØ –¢–µ–º–∞: {practice.get('theme', '–û–±—â–∞—è')}\n"
            response += f"üìù –¢–∏–ø: {practice.get('type', '–ü—Ä–∞–∫—Ç–∏–∫–∞')}\n"
            
            description = practice.get('description', '')
            if len(description) > 200:
                description = description[:200] + "..."
            response += f"üí° {description}\n\n"
        
        if len(practices) > 3:
            response += f"... –∏ –µ—â–µ {len(practices) - 3} –ø—Ä–∞–∫—Ç–∏–∫\n\n"
        
        response += "üéØ **–ö–∞–∫–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –≤–∞—Å –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª–∞?** –ò–ª–∏ —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –∫–∞–∫–æ–π-—Ç–æ –∏–∑ –Ω–∏—Ö?"
        
        return response
    
    async def _handle_save_analytics(self, result: Dict[str, Any], user_message: str) -> str:
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–æ–≤."""
        if result.get("error"):
            return f"‚ùå {result['error']}"
        
        return "‚úÖ –ê–Ω–∞–ª–∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –Ω–µ–º—É –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è."
    
    def _enhance_message_with_context(self, user_message: str, context: List[Dict[str, Any]]) -> str:
        """–£—Å–∏–ª–∏–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –¥–ª—è –ª—É—á—à–µ–≥–æ –ø–æ–Ω–∏–º–∞–Ω–∏—è."""
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
        if "–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:" in user_message:
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            lines = user_message.split('\n')
            user_data_lines = []
            in_user_data = False
            
            for line in lines:
                if "–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:" in line:
                    in_user_data = True
                    continue
                elif in_user_data and line.strip():
                    user_data_lines.append(line.strip())
                elif in_user_data and not line.strip():
                    break
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –∏ –¥–∞—Ç—É
            name = None
            birth_date = None
            
            for line in user_data_lines:
                if line.startswith("–ò–º—è:"):
                    name = line.replace("–ò–º—è:", "").strip()
                elif line.startswith("–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è:"):
                    birth_date = line.replace("–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è:", "").strip()
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∑–∞–ø—Ä–æ—Å–∞
            request_type = self._detect_request_type_from_context(user_message, context)
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è OpenAI
            if name and birth_date:
                return f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç: {user_message.split('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:')[1].split('–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:')[0].strip()}\n\n–î–∞–Ω–Ω—ã–µ: –ò–º—è: {name}, –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {birth_date}\n–¢–∏–ø –∑–∞–ø—Ä–æ—Å–∞: {request_type}"
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
        context_analysis = self._analyze_context(user_message, context)
        
        if context_analysis["is_answer"]:
            # –ï—Å–ª–∏ —ç—Ç–æ –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å, –¥–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å —Ç–∏–ø–æ–º –∑–∞–ø—Ä–æ—Å–∞
            original_query = context_analysis.get("original_query", "")
            request_type = self._detect_request_type_from_context(user_message, context)
            if original_query:
                return f"–ö–û–ù–¢–ï–ö–°–¢: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å '{original_query}'. –¢–∏–ø –∑–∞–ø—Ä–æ—Å–∞: {request_type}. –û—Ç–≤–µ—Ç: {user_message}"
        
        return user_message
    
    def _analyze_context(self, user_message: str, context: List[Dict[str, Any]]) -> Dict[str, Any]:
        """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è."""
        result = {
            "is_answer": False,
            "original_query": "",
            "looks_like_date": False,
            "looks_like_name": False
        }
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–≥–ª—è–¥–∏—Ç –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –¥–∞—Ç–∞
        if self._looks_like_date(user_message):
            result["looks_like_date"] = True
            
            # –ò—â–µ–º –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ, —Å–ø—Ä–∞—à–∏–≤–∞–ª –ª–∏ –±–æ—Ç –¥–∞—Ç—É
            for msg in reversed(context[-5:]):  # –°–º–æ—Ç—Ä–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å–æ–æ–±—â–µ–Ω–∏–π
                if msg["role"] == "assistant":
                    content = msg["content"].lower()
                    if any(phrase in content for phrase in ["–¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è", "–¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è", "–¥–∞—Ç–∞", "—Ä–æ–∂–¥–µ–Ω–∏—è"]):
                        result["is_answer"] = True
                        result["original_query"] = "–¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è"
                        break
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–≥–ª—è–¥–∏—Ç –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –∏–º—è
        elif self._looks_like_name(user_message):
            result["looks_like_name"] = True
            
            # –ò—â–µ–º –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ, —Å–ø—Ä–∞—à–∏–≤–∞–ª –ª–∏ –±–æ—Ç –∏–º—è
            for msg in reversed(context[-5:]):
                if msg["role"] == "assistant":
                    content = msg["content"].lower()
                    if any(phrase in content for phrase in ["–∏–º—è", "–∫–∞–∫ –∑–æ–≤—É—Ç", "—Ç–≤–æ–µ –∏–º—è"]):
                        result["is_answer"] = True
                        result["original_query"] = "–∏–º—è"
                        break
        
        return result
    
    def _looks_like_date(self, text: str) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –≤—ã–≥–ª—è–¥–∏—Ç –ª–∏ —Ç–µ–∫—Å—Ç –∫–∞–∫ –¥–∞—Ç–∞."""
        import re
        # –ü–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –¥–∞—Ç: dd.mm.yyyy, dd/mm/yyyy, dd-mm-yyyy, dd mm yyyy
        date_patterns = [
            r'\d{1,2}\.\d{1,2}\.\d{4}',
            r'\d{1,2}/\d{1,2}/\d{4}',
            r'\d{1,2}-\d{1,2}-\d{4}',
            r'\d{1,2}\s+\d{1,2}\s+\d{4}'
        ]
        
        for pattern in date_patterns:
            if re.search(pattern, text):
                return True
        return False
    
    def _looks_like_name(self, text: str) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –≤—ã–≥–ª—è–¥–∏—Ç –ª–∏ —Ç–µ–∫—Å—Ç –∫–∞–∫ –∏–º—è."""
        # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã, –æ–¥–Ω–æ —Å–ª–æ–≤–æ, –¥–ª–∏–Ω–∞ 2-20 —Å–∏–º–≤–æ–ª–æ–≤
        if not text or not text.strip():
            return False
        
        text = text.strip()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –æ–¥–Ω–æ —Å–ª–æ–≤–æ (–Ω–µ—Ç –ø—Ä–æ–±–µ–ª–æ–≤)
        if ' ' in text:
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Å–∏–º–≤–æ–ª—ã - –±—É–∫–≤—ã
        if not text.isalpha():
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É
        if len(text) < 2 or len(text) > 20:
            return False
        
        return True
    
    
    def _detect_request_type_from_context(self, user_message: str, context: List[Dict[str, Any]]) -> str:
        """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø –∑–∞–ø—Ä–æ—Å–∞ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞."""
        message_lower = user_message.lower()
        
        # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—é
        if any(word in message_lower for word in ["—Ä–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ", "—Ä–∞—Å—Å–∫–∞–∂–∏ –æ–±", "–ø–æ–¥—Ä–æ–±–Ω–µ–µ", "–¥–µ—Ç–∞–ª–∏", "–∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ", "–∫–∞–∫–æ–π", "–∫–∞–∫–∞—è", "–∫–∞–∫–∏–µ", "–æ–±–ª–∞—Å—Ç–∏ —Ä–∞–∑–≤–∏—Ç–∏—è", "–æ–±–ª–∞—Å—Ç–∏ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è"]):
            return "–¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –ø—Ä–æ–≥–Ω–æ–∑
        if any(word in message_lower for word in ["–ø—Ä–æ–≥–Ω–æ–∑", "–ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ", "—á—Ç–æ –∂–¥–µ—Ç", "—á—Ç–æ –±—É–¥–µ—Ç"]):
            return "–ø—Ä–æ–≥–Ω–æ–∑"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å
        if any(word in message_lower for word in ["—Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å", "–æ—Ç–Ω–æ—à–µ–Ω–∏—è", "–ø–∞—Ä–∞", "–≤–º–µ—Å—Ç–µ", "–∏–¥–µ–∞–ª—å–Ω—ã–π –ø–∞—Ä—Ç–Ω–µ—Ä", "–Ω–∞–π—Ç–∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è"]):
            return "—Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é
        if any(word in message_lower for word in ["—Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è", "–ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ", "–º–∏—Å—Å–∏—è", "–ø—É—Ç—å", "–∫–∞—Ä—å–µ—Ä–∞"]):
            return "—Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–∏
        if any(word in message_lower for word in ["–ø—Ä–∞–∫—Ç–∏–∫–∏", "—É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è", "—Ä–∞–∑–≤–∏—Ç–∏–µ", "—Ä–∞–±–æ—Ç–∞—Ç—å", "—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å", "–ø–æ—Å–æ–≤–µ—Ç—É–π –ø—Ä–∞–∫—Ç–∏–∫—É"]):
            return "–ø—Ä–∞–∫—Ç–∏–∫–∏"
        
        # –ï—Å–ª–∏ –≤ —Ç–µ–∫—É—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –∏—â–µ–º –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
        for msg in reversed(context[-10:]):
            if msg["role"] == "user":
                content = msg["content"].lower()
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –ø—Ä–æ–≥–Ω–æ–∑
                if any(word in content for word in ["–ø—Ä–æ–≥–Ω–æ–∑", "–ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ", "—á—Ç–æ –∂–¥–µ—Ç", "—á—Ç–æ –±—É–¥–µ—Ç"]):
                    return "–ø—Ä–æ–≥–Ω–æ–∑"
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å
                if any(word in content for word in ["—Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å", "–æ—Ç–Ω–æ—à–µ–Ω–∏—è", "–ø–∞—Ä–∞", "–≤–º–µ—Å—Ç–µ", "–∏–¥–µ–∞–ª—å–Ω—ã–π –ø–∞—Ä—Ç–Ω–µ—Ä", "–Ω–∞–π—Ç–∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è"]):
                    return "—Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å"
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é
                if any(word in content for word in ["—Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è", "–ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ", "–º–∏—Å—Å–∏—è", "–ø—É—Ç—å", "–∫–∞—Ä—å–µ—Ä–∞"]):
                    return "—Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è"
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–∏
                if any(word in content for word in ["–ø—Ä–∞–∫—Ç–∏–∫–∏", "—É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è", "—Ä–∞–∑–≤–∏—Ç–∏–µ", "—Ä–∞–±–æ—Ç–∞—Ç—å", "—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å", "–ø–æ—Å–æ–≤–µ—Ç—É–π –ø—Ä–∞–∫—Ç–∏–∫—É"]):
                    return "–ø—Ä–∞–∫—Ç–∏–∫–∏"
        
        # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - –∞–Ω–∞–ª–∏–∑
        return "–∞–Ω–∞–ª–∏–∑"
    
    async def _generate_practices_response(self, analysis: Dict, birth_date: str, name: str, user_id: int, user_message: str) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç —Å –ø—Ä–∞–∫—Ç–∏–∫–∞–º–∏."""
        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–º—É –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
        theme = user_message.lower()
        
        # –ò—â–µ–º –ø—Ä–∞–∫—Ç–∏–∫–∏
        try:
            practices_result = await self.functions.execute_function("get_practices_by_theme", {
                "theme": theme
            })
            
            if practices_result.get("error"):
                return f"‚ùå {practices_result['error']}"
            
            practices = practices_result.get("practices", [])
            
            if not practices:
                # –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø—Ä–∞–∫—Ç–∏–∫, –¥–∞–µ–º –æ–±—â–∏–µ —Å–æ–≤–µ—Ç—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞
                return await self._generate_general_practices_advice(analysis, birth_date, name, theme)
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç —Å –ø—Ä–∞–∫—Ç–∏–∫–∞–º–∏
            response = f"‚ú® **–ü–ï–†–°–û–ù–ê–õ–¨–ù–´–ï –ü–†–ê–ö–¢–ò–ö–ò**\n\n"
            
            if name:
                response += f"üë§ **{name}**\n"
            response += f"üìÖ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {birth_date}\n\n"
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 –ø—Ä–∞–∫—Ç–∏–∫
            for i, practice in enumerate(practices[:5], 1):
                response += f"**{i}. {practice.get('name', '–ü—Ä–∞–∫—Ç–∏–∫–∞')}**\n"
                
                description = practice.get('description', '')
                if len(description) > 150:
                    description = description[:150] + "..."
                response += f"üí° {description}\n\n"
            
            if len(practices) > 5:
                response += f"... –∏ –µ—â–µ {len(practices) - 5} –ø—Ä–∞–∫—Ç–∏–∫\n\n"
            
            response += "üéØ **–ö–∞–∫–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ —Ç–µ–±—è –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª–∞?**"
            
            return response
            
        except Exception as e:
            return f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø—Ä–∞–∫—Ç–∏–∫: {str(e)}"
    
    async def _generate_detailed_response(self, analysis: Dict, birth_date: str, name: str, user_id: int, user_message: str) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞."""
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º, –æ —á–µ–º –∏–º–µ–Ω–Ω–æ —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        message_lower = user_message.lower()
        
        if "–∏–¥–µ–∞–ª—å–Ω—ã–π –ø–∞—Ä—Ç–Ω–µ—Ä" in message_lower or "–∫–∞–∫–æ–π" in message_lower and "–ø–∞—Ä—Ç–Ω–µ—Ä" in message_lower:
            return await self._generate_ideal_partner_details(analysis, birth_date, name)
        elif "–æ–±–ª–∞—Å—Ç–∏ —Ä–∞–∑–≤–∏—Ç–∏—è" in message_lower or "—Ä–∞–∑–≤–∏—Ç–∏–µ" in message_lower:
            return await self._generate_development_areas_details(analysis, birth_date, name)
        elif "—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å" in message_lower:
            return await self._generate_confidence_details(analysis, birth_date, name)
        else:
            # –û–±—â–∞—è –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è
            return await self._generate_general_details(analysis, birth_date, name, user_message)
    
    async def _generate_ideal_partner_details(self, analysis: Dict, birth_date: str, name: str) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–µ—Ç–∞–ª–∏ –æ–± –∏–¥–µ–∞–ª—å–Ω–æ–º –ø–∞—Ä—Ç–Ω–µ—Ä–µ."""
        calculations = analysis.get("calculations", {})
        chs = calculations.get('consciousness_number', 0)
        chd = calculations.get('action_number', 0)
        
        response = f"üíï **–¢–í–û–ô –ò–î–ï–ê–õ–¨–ù–´–ô –ü–ê–†–¢–ù–ï–†**\n\n"
        
        if name:
            response += f"üë§ **{name}**\n"
        response += f"üìÖ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {birth_date}\n\n"
        
        # –î–µ—Ç–∞–ª—å–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –ø–∞—Ä—Ç–Ω–µ—Ä–∞
        response += f"**üåü –ò–î–ï–ê–õ–¨–ù–´–ï –•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö–ò:**\n"
        
        if chs == 2:
            response += f"‚Ä¢ **–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∑—Ä–µ–ª–æ—Å—Ç—å** - —É–º–µ–µ—Ç –ø–æ–Ω–∏–º–∞—Ç—å —Ç–≤–æ–∏ —á—É–≤—Å—Ç–≤–∞\n"
            response += f"‚Ä¢ **–î–∏–ø–ª–æ–º–∞—Ç–∏—á–Ω–æ—Å—Ç—å** - —Ä–µ—à–∞–µ—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã —á–µ—Ä–µ–∑ –¥–∏–∞–ª–æ–≥\n"
            response += f"‚Ä¢ **–ü–æ–¥–¥–µ—Ä–∂–∫–∞** - –≤—Å–µ–≥–¥–∞ –Ω–∞ —Ç–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ\n"
            response += f"‚Ä¢ **–ì–∞—Ä–º–æ–Ω–∏—è** - —Ü–µ–Ω–∏—Ç –º–∏—Ä –∏ —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö\n\n"
        
        response += f"**üíé –≠–ù–ï–†–ì–ï–¢–ò–ß–ï–°–ö–ê–Ø –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–¨:**\n"
        response += f"‚Ä¢ –ò—â–∏ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ —Å —ç–Ω–µ—Ä–≥–∏—è–º–∏ 1, 3, 4, 6, 8 (—Ç–≤–æ–∏ —Å–ª–∞–±—ã–µ)\n"
        response += f"‚Ä¢ –ò–∑–±–µ–≥–∞–π –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ —Å —ç–Ω–µ—Ä–≥–∏–µ–π 2 (–º–æ–∂–µ—Ç –±—ã—Ç—å —Å–ª–∏—à–∫–æ–º –ø–æ—Ö–æ–∂)\n"
        response += f"‚Ä¢ –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥—è—Ç –ª—é–¥–∏ —Å –ß–° 1, 3, 4, 6, 8\n\n"
        
        response += f"**üéØ –ö–û–ù–ö–†–ï–¢–ù–´–ï –°–û–í–ï–¢–´:**\n"
        response += f"‚Ä¢ –û–±—Ä–∞—â–∞–π –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —É–º–µ—é—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–µ—à–µ–Ω–∏—è\n"
        response += f"‚Ä¢ –ò—â–∏ –ø–∞—Ä—Ç–Ω–µ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π —Ü–µ–Ω–∏—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –∏ —Å–µ–º—å—é\n"
        response += f"‚Ä¢ –ò–∑–±–µ–≥–∞–π —Å–ª–∏—à–∫–æ–º –∏–º–ø—É–ª—å—Å–∏–≤–Ω—ã—Ö –∏ –Ω–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã—Ö –ª—é–¥–µ–π\n\n"
        
        response += f"**üí° –•–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –æ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º —á–µ–ª–æ–≤–µ–∫–æ–º?** –î–∞–π –µ–≥–æ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è!"
        
        return response
    
    async def _generate_development_areas_details(self, analysis: Dict, birth_date: str, name: str) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–µ—Ç–∞–ª–∏ –æ–± –æ–±–ª–∞—Å—Ç—è—Ö —Ä–∞–∑–≤–∏—Ç–∏—è."""
        matrix = analysis.get("matrix", {})
        weak_digits = matrix.get('weak_digits', [])
        
        response = f"üå± **–¢–í–û–ò –û–ë–õ–ê–°–¢–ò –†–ê–ó–í–ò–¢–ò–Ø**\n\n"
        
        if name:
            response += f"üë§ **{name}**\n"
        response += f"üìÖ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {birth_date}\n\n"
        
        response += f"**üéØ –ö–û–ù–ö–†–ï–¢–ù–´–ï –û–ë–õ–ê–°–¢–ò –î–õ–Ø –†–ê–ë–û–¢–´:**\n"
        
        for digit in weak_digits:
            if digit == 1:
                response += f"‚Ä¢ **–≠–Ω–µ—Ä–≥–∏—è 1** - –ª–∏–¥–µ—Ä—Å—Ç–≤–æ, –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–∞, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å\n"
                response += f"  –ü—Ä–∞–∫—Ç–∏–∫–∏: –ø—Ä–∏–Ω–∏–º–∞–π —Ä–µ—à–µ–Ω–∏—è, –±–µ—Ä–∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å, —Ä–∞–∑–≤–∏–≤–∞–π —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å\n\n"
            elif digit == 2:
                response += f"‚Ä¢ **–≠–Ω–µ—Ä–≥–∏—è 2** - –¥–∏–ø–ª–æ–º–∞—Ç–∏—è, —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ, —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å\n"
                response += f"  –ü—Ä–∞–∫—Ç–∏–∫–∏: —Ä–∞–±–æ—Ç–∞–π –≤ –∫–æ–º–∞–Ω–¥–µ, —Ä–∞–∑–≤–∏–≤–∞–π —ç–º–ø–∞—Ç–∏—é, —É—á–∏—Å—å —Å–ª—É—à–∞—Ç—å\n\n"
            elif digit == 5:
                response += f"‚Ä¢ **–≠–Ω–µ—Ä–≥–∏—è 5** - —Å–≤–æ–±–æ–¥–∞, –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è, –ø–µ—Ä–µ–º–µ–Ω—ã\n"
                response += f"  –ü—Ä–∞–∫—Ç–∏–∫–∏: –ø—É—Ç–µ—à–µ—Å—Ç–≤—É–π, –∏–∑—É—á–∞–π –Ω–æ–≤–æ–µ, –≤—ã—Ö–æ–¥–∏ –∏–∑ –∑–æ–Ω—ã –∫–æ–º—Ñ–æ—Ä—Ç–∞\n\n"
            elif digit == 7:
                response += f"‚Ä¢ **–≠–Ω–µ—Ä–≥–∏—è 7** - –º—É–¥—Ä–æ—Å—Ç—å, –∞–Ω–∞–ª–∏–∑, –¥—É—Ö–æ–≤–Ω–æ—Å—Ç—å\n"
                response += f"  –ü—Ä–∞–∫—Ç–∏–∫–∏: –º–µ–¥–∏—Ç–∏—Ä—É–π, –∏–∑—É—á–∞–π —Ñ–∏–ª–æ—Å–æ—Ñ–∏—é, —Ä–∞–∑–≤–∏–≤–∞–π –∏–Ω—Ç—É–∏—Ü–∏—é\n\n"
        
        response += f"**üí° –•–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è —ç—Ç–∏—Ö —ç–Ω–µ—Ä–≥–∏–π?**"
        
        return response
    
    async def _generate_confidence_details(self, analysis: Dict, birth_date: str, name: str) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–µ—Ç–∞–ª–∏ –æ–± —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏."""
        calculations = analysis.get("calculations", {})
        chs = calculations.get('consciousness_number', 0)
        
        response = f"üí™ **–†–ê–ó–í–ò–¢–ò–ï –£–í–ï–†–ï–ù–ù–û–°–¢–ò**\n\n"
        
        if name:
            response += f"üë§ **{name}**\n"
        response += f"üìÖ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {birth_date}\n\n"
        
        response += f"**üéØ –¢–í–û–ô –ü–£–¢–¨ –ö –£–í–ï–†–ï–ù–ù–û–°–¢–ò:**\n"
        
        if chs == 2:
            response += f"‚Ä¢ **–†–∞–±–æ—Ç–∞–π –Ω–∞–¥ –ø—Ä–∏–Ω—è—Ç–∏–µ–º —Ä–µ—à–µ–Ω–∏–π** - —Ç–≤–æ—è —Å–ª–∞–±–æ—Å—Ç—å –≤ –ª–∏–¥–µ—Ä—Å—Ç–≤–µ\n"
            response += f"‚Ä¢ **–†–∞–∑–≤–∏–≤–∞–π –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å** - –Ω–µ –ø–æ–ª–∞–≥–∞–π—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ –¥—Ä—É–≥–∏—Ö\n"
            response += f"‚Ä¢ **–£—á–∏—Å—å –≥–æ–≤–æ—Ä–∏—Ç—å \"–Ω–µ—Ç\"** - –∑–∞—â–∏—â–∞–π —Å–≤–æ–∏ –≥—Ä–∞–Ω–∏—Ü—ã\n"
            response += f"‚Ä¢ **–ü—Ä–∞–∫—Ç–∏–∫—É–π –ø—É–±–ª–∏—á–Ω—ã–µ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è** - –ø—Ä–µ–æ–¥–æ–ª–µ–≤–∞–π —Å—Ç—Ä–∞—Ö\n\n"
        
        response += f"**üíé –¢–í–û–ò –°–ò–õ–¨–ù–´–ï –°–¢–û–†–û–ù–´:**\n"
        response += f"‚Ä¢ –î–∏–ø–ª–æ–º–∞—Ç–∏—á–Ω–æ—Å—Ç—å - –∏—Å–ø–æ–ª—å–∑—É–π —ç—Ç–æ –∫–∞–∫ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ\n"
        response += f"‚Ä¢ –ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å - –ø–æ–Ω–∏–º–∞–π –ª—é–¥–µ–π –ª—É—á—à–µ –¥—Ä—É–≥–∏—Ö\n"
        response += f"‚Ä¢ –ì–∞—Ä–º–æ–Ω–∏—á–Ω–æ—Å—Ç—å - —Å–æ–∑–¥–∞–≤–∞–π –∫–æ–º—Ñ–æ—Ä—Ç–Ω—É—é –∞—Ç–º–æ—Å—Ñ–µ—Ä—É\n\n"
        
        response += f"**üöÄ –ö–û–ù–ö–†–ï–¢–ù–´–ï –®–ê–ì–ò:**\n"
        response += f"‚Ä¢ –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –ø—Ä–∏–Ω–∏–º–∞–π –æ–¥–Ω–æ –≤–∞–∂–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ\n"
        response += f"‚Ä¢ –í—ã—Å–∫–∞–∑—ã–≤–∞–π —Å–≤–æ–µ –º–Ω–µ–Ω–∏–µ –≤ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞—Ö\n"
        response += f"‚Ä¢ –ó–∞–Ω–∏–º–∞–π—Å—è —Å–ø–æ—Ä—Ç–æ–º –¥–ª—è —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏\n"
        response += f"‚Ä¢ –ò–∑—É—á–∞–π —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ –¥–ª—è –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–π —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏\n\n"
        
        response += f"**üí° –•–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏?**"
        
        return response
    
    async def _generate_general_practices_advice(self, analysis: Dict, birth_date: str, name: str, theme: str) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ–±—â–∏–µ —Å–æ–≤–µ—Ç—ã –ø–æ –ø—Ä–∞–∫—Ç–∏–∫–∞–º –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞."""
        calculations = analysis.get("calculations", {})
        chs = calculations.get('consciousness_number', 0)
        chd = calculations.get('action_number', 0)
        
        response = f"‚ú® **–ü–ï–†–°–û–ù–ê–õ–¨–ù–´–ï –°–û–í–ï–¢–´**\n\n"
        
        if name:
            response += f"üë§ **{name}**\n"
        response += f"üìÖ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {birth_date}\n\n"
        
        response += f"**üéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –î–õ–Ø –¢–ï–ú–´ '{theme.upper()}':**\n"
        
        if "—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å" in theme:
            response += f"‚Ä¢ **–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∞—Ñ—Ñ–∏—Ä–º–∞—Ü–∏–∏** - –ø–æ–≤—Ç–æ—Ä—è–π –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏\n"
            response += f"‚Ä¢ **–§–∏–∑–∏—á–µ—Å–∫–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è** - —É–∫—Ä–µ–ø–ª—è–π —Ç–µ–ª–æ –∏ –¥—É—Ö\n"
            response += f"‚Ä¢ **–ú–µ–¥–∏—Ç–∞—Ü–∏—è** - —Ä–∞–∑–≤–∏–≤–∞–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é —Å–∏–ª—É\n"
            response += f"‚Ä¢ **–ò–∑—É—á–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ** - —Ä–∞—Å—à–∏—Ä—è–π –∫—Ä—É–≥–æ–∑–æ—Ä\n\n"
        elif "–æ—Ç–Ω–æ—à–µ–Ω–∏—è" in theme:
            response += f"‚Ä¢ **–†–∞–±–æ—Ç–∞ –Ω–∞–¥ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–µ–π** - —É—á–∏—Å—å –≤—ã—Ä–∞–∂–∞—Ç—å —á—É–≤—Å—Ç–≤–∞\n"
            response += f"‚Ä¢ **–†–∞–∑–≤–∏—Ç–∏–µ —ç–º–ø–∞—Ç–∏–∏** - –ø–æ–Ω–∏–º–∞–π –¥—Ä—É–≥–∏—Ö –ª—é–¥–µ–π\n"
            response += f"‚Ä¢ **–†–∞–±–æ—Ç–∞ –Ω–∞–¥ —Å–æ–±–æ–π** - —Å—Ç–∞–Ω—å –ª—É—á—à–µ –¥–ª—è –ø–∞—Ä—Ç–Ω–µ—Ä–∞\n"
            response += f"‚Ä¢ **–ò–∑—É—á–µ–Ω–∏–µ –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏** - –ø–æ–Ω–∏–º–∞–π –º–µ—Ö–∞–Ω–∏–∑–º—ã –æ—Ç–Ω–æ—à–µ–Ω–∏–π\n\n"
        else:
            response += f"‚Ä¢ **–ú–µ–¥–∏—Ç–∞—Ü–∏—è** - —Ä–∞–∑–≤–∏–≤–∞–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é –≥–∞—Ä–º–æ–Ω–∏—é\n"
            response += f"‚Ä¢ **–ò–∑—É—á–µ–Ω–∏–µ —Å–µ–±—è** - –ø–æ–∑–Ω–∞–≤–∞–π —Å–≤–æ–∏ —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã\n"
            response += f"‚Ä¢ **–ü—Ä–∞–∫—Ç–∏–∫–∞ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏** - —Ü–µ–Ω–∏ —Ç–æ, —á—Ç–æ –∏–º–µ–µ—à—å\n"
            response += f"‚Ä¢ **–†–∞–∑–≤–∏—Ç–∏–µ —Ç–∞–ª–∞–Ω—Ç–æ–≤** - –∏—Å–ø–æ–ª—å–∑—É–π —Å–≤–æ–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏\n\n"
        
        response += f"**üí° –•–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª–µ–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏?** –£—Ç–æ—á–Ω–∏, —á—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç!"
        
        return response
    
    async def _generate_general_details(self, analysis: Dict, birth_date: str, name: str, user_message: str) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ–±—â—É—é –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—é."""
        response = f"üîç **–î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó**\n\n"
        
        if name:
            response += f"üë§ **{name}**\n"
        response += f"üìÖ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {birth_date}\n\n"
        
        response += f"**üí¨ –¢–≤–æ–π –∑–∞–ø—Ä–æ—Å:** {user_message}\n\n"
        
        response += f"**üéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:**\n"
        response += f"‚Ä¢ –ò–∑—É—á–∞–π —Å–≤–æ–∏ —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã –∏ –∏—Å–ø–æ–ª—å–∑—É–π –∏—Ö\n"
        response += f"‚Ä¢ –†–∞–±–æ—Ç–∞–π –Ω–∞–¥ —Å–ª–∞–±—ã–º–∏ —ç–Ω–µ—Ä–≥–∏—è–º–∏ –∏–∑ –º–∞—Ç—Ä–∏—Ü—ã\n"
        response += f"‚Ä¢ –†–∞–∑–≤–∏–≤–∞–π—Å—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å–æ —Å–≤–æ–∏–º –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ–º\n"
        response += f"‚Ä¢ –ü—Ä–∏–º–µ–Ω—è–π –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∑–Ω–∞–Ω–∏—è –≤ –∂–∏–∑–Ω–∏\n\n"
        
        response += f"**üí° –•–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –∫–∞–∫–æ–π-—Ç–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏?**"
        
        return response
